// <auto-generated />
using System;
using EmployeeFinance.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EmployeeFinance.Migrations
{
    [DbContext(typeof(VYPAK_PAYROLLContext))]
    partial class VYPAK_PAYROLLContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EmployeeFinance.Models.AttendanceMaster", b =>
                {
                    b.Property<int>("AttendanceId")
                        .HasColumnType("int")
                        .HasColumnName("Attendance_Id");

                    b.Property<string>("AttendanceCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Attendance_Code");

                    b.Property<string>("AttendanceName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Attendance_Name");

                    b.Property<string>("AttendanceOtType")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("Attendance_OT_Type");

                    b.Property<string>("AttendanceRegType")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("Attendance_Reg_Type");

                    b.Property<string>("AttendanceSalaryType")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("Attendance_Salary_Type");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("Created_By");

                    b.Property<DateTime?>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Created_On")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("Is_Deleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("IsMorethanWorkDay")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("Is_Morethan_WorkDay");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("Modified_By");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("Modified_On");

                    b.Property<string>("Remarks")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("SalaryCalendarType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Salary_Calendar_Type");

                    b.HasKey("AttendanceId");

                    b.ToTable("Attendance_Master");
                });

            modelBuilder.Entity("EmployeeFinance.Models.BankMaster", b =>
                {
                    b.Property<int>("BankId")
                        .HasColumnType("int")
                        .HasColumnName("Bank_Id");

                    b.Property<string>("BankCode")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Bank_Code");

                    b.Property<string>("Address")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("BankAccNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("BankName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Bank_Name");

                    b.Property<string>("BankShtName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Bank_Sht_Name");

                    b.Property<string>("BranchName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Branch_Name");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("Created_By");

                    b.Property<DateTime?>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Created_On")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("IfscCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("IFSC_Code");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("Is_Deleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("Modified_By");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("Modified_On");

                    b.Property<string>("PhoneNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Phone_No");

                    b.Property<int?>("PinNo")
                        .HasColumnType("int")
                        .HasColumnName("Pin_No");

                    b.HasKey("BankId", "BankCode");

                    b.ToTable("Bank_Master");
                });

            modelBuilder.Entity("EmployeeFinance.Models.CityMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("StateId")
                        .HasColumnType("int")
                        .HasColumnName("StateID");

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.ToTable("CityMaster");
                });

            modelBuilder.Entity("EmployeeFinance.Models.CountryMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryCode")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("CountryMaster");
                });

            modelBuilder.Entity("EmployeeFinance.Models.DepartmentMst", b =>
                {
                    b.Property<int>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("Department_Id");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("Created_By");

                    b.Property<DateTime?>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Created_On")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("DepartmentCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Department_Code");

                    b.Property<string>("DepartmentName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Department_Name");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("Is_Deleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("Modified_By");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("Modified_On");

                    b.HasKey("DepartmentId");

                    b.ToTable("Department_Mst");
                });

            modelBuilder.Entity("EmployeeFinance.Models.DesignationMst", b =>
                {
                    b.Property<int>("DesigId")
                        .HasColumnType("int")
                        .HasColumnName("Desig_Id");

                    b.Property<string>("DesigCode")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Desig_Code");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("Created_By");

                    b.Property<DateTime?>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Created_On")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("DesigName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Desig_Name");

                    b.Property<string>("DesigShtName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Desig_Sht_Name");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("Is_Deleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("Modified_By");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("Modified_On");

                    b.HasKey("DesigId", "DesigCode")
                        .HasName("PK_Designation_Mst_1");

                    b.ToTable("Designation_Mst");
                });

            modelBuilder.Entity("EmployeeFinance.Models.DivisionMaster", b =>
                {
                    b.Property<int>("DivisionId")
                        .HasColumnType("int")
                        .HasColumnName("Division_Id");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("Created_By");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("Created_On");

                    b.Property<string>("DivisionName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Division_Name");

                    b.Property<string>("DivisionShortName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Division_Short_Name");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("Is_Deleted");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("Modified_By");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("Modified_On");

                    b.Property<int>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("DivisionId");

                    b.ToTable("Division_Master");
                });

            modelBuilder.Entity("EmployeeFinance.Models.EmployeeDetail", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Employee_Code");

                    b.Property<string>("AadharNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("AAdhar_No");

                    b.Property<string>("AltEmailId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Alt_Email_ID");

                    b.Property<string>("BankAcNo")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("BankName")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Bank_Name");

                    b.Property<string>("BloodGroup")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("BranchName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Branch_Name");

                    b.Property<string>("CcEmailId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CC_Email_ID");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("Created_By");

                    b.Property<DateTime?>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Created_On")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateOfJoin")
                        .HasColumnType("date")
                        .HasColumnName("Date_of_Join");

                    b.Property<DateTime?>("DateOfLeave")
                        .HasColumnType("date")
                        .HasColumnName("Date_of_Leave");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("Department_Id");

                    b.Property<int?>("DesigId")
                        .HasColumnType("int")
                        .HasColumnName("Desig_Id");

                    b.Property<string>("Division")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("EmailId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Email_ID");

                    b.Property<string>("EmpAttendance")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Emp_Attendance");

                    b.Property<int?>("EmpCateId")
                        .HasColumnType("int")
                        .HasColumnName("Emp_Cate_Id");

                    b.Property<string>("EmployeeImage")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Employee_Image");

                    b.Property<string>("EmployeeName")
                        .HasMaxLength(85)
                        .IsUnicode(false)
                        .HasColumnType("varchar(85)")
                        .HasColumnName("Employee_Name");

                    b.Property<string>("EmployeeTitle")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Employee_Title");

                    b.Property<string>("EsiDispensary")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ESI_Dispensary");

                    b.Property<string>("EsiNo")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("ESI_No");

                    b.Property<string>("FathersName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Gender")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Grade")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("GriNo")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("GRI_No");

                    b.Property<string>("InsuranceNo")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Insurance_No");

                    b.Property<bool?>("IsDefaultAltEmailId")
                        .HasColumnType("bit")
                        .HasColumnName("Is_Default_Alt_EmailId");

                    b.Property<bool?>("IsDefaultEmailId")
                        .HasColumnType("bit")
                        .HasColumnName("Is_Default_EmailId");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("Is_Deleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("IsDisabled")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<bool?>("IsEsi")
                        .HasColumnType("bit")
                        .HasColumnName("IsESI");

                    b.Property<bool?>("IsGri")
                        .HasColumnType("bit")
                        .HasColumnName("IsGRI");

                    b.Property<string>("IsHigherEpf")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("IsHigherEPF");

                    b.Property<string>("IsHigherEps")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("IsHigherEPS");

                    b.Property<bool?>("IsInsurance")
                        .HasColumnType("bit");

                    b.Property<string>("IsInternationalworker")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<bool?>("IsLeaving")
                        .HasColumnType("bit")
                        .HasColumnName("Is_Leaving");

                    b.Property<bool?>("IsPf")
                        .HasColumnType("bit")
                        .HasColumnName("IsPF");

                    b.Property<bool?>("IsRestrictPf")
                        .HasColumnType("bit")
                        .HasColumnName("Is_Restrict_PF");

                    b.Property<bool?>("IsZeroPension")
                        .HasColumnType("bit")
                        .HasColumnName("Is_Zero_Pension");

                    b.Property<bool?>("IsZeroPt")
                        .HasColumnType("bit")
                        .HasColumnName("Is_Zero_PT");

                    b.Property<string>("MaritalStatus")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Marital_Status");

                    b.Property<DateTime?>("MarriageDate")
                        .HasColumnType("date")
                        .HasColumnName("Marriage_Date");

                    b.Property<string>("Mobile")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("Modified_By");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("Modified_On");

                    b.Property<string>("MothersName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NomineeName")
                        .HasMaxLength(47)
                        .IsUnicode(false)
                        .HasColumnType("varchar(47)");

                    b.Property<string>("Occupation")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Panno")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PANno");

                    b.Property<string>("PassportNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("PastServiceInDay")
                        .HasColumnType("int")
                        .HasColumnName("Past_Service_inDay");

                    b.Property<string>("PermanentArea")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Permanent_Area");

                    b.Property<string>("PermanentCity")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Permanent_City");

                    b.Property<string>("PermanentPincode")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("Permanent_Pincode");

                    b.Property<string>("PermanentResName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Permanent_Res_Name");

                    b.Property<string>("PermanentResNo")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Permanent_Res_No");

                    b.Property<string>("PermanentRoad")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Permanent_Road");

                    b.Property<string>("PermanentState")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Permanent_State");

                    b.Property<string>("PfDeptFile")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PF_Dept_File");

                    b.Property<string>("PfNo")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("PF_No");

                    b.Property<string>("PhoneNo")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("PresentArea")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Present_Area");

                    b.Property<string>("PresentCity")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Present_City");

                    b.Property<string>("PresentPincode")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("Present_Pincode");

                    b.Property<string>("PresentResName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Present_Res_Name");

                    b.Property<string>("PresentResNo")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Present_Res_No");

                    b.Property<string>("PresentRoad")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Present_Road");

                    b.Property<string>("PresentState")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Present_State");

                    b.Property<string>("ReasonOfLeave")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Reason_Of_Leave");

                    b.Property<DateTime?>("SalaryCalcFrom")
                        .HasColumnType("date")
                        .HasColumnName("Salary_Calc_From");

                    b.Property<string>("SalaryStructureId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Salary_Structure_id");

                    b.Property<string>("StdCode")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("STD_Code");

                    b.Property<string>("UanNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("UAN_No");

                    b.Property<string>("VoterId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("WardCircle")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Ward_Circle");

                    b.HasKey("EmployeeId", "EmployeeCode");

                    b.ToTable("Employee_Details");
                });

            modelBuilder.Entity("EmployeeFinance.Models.EmployeeDisciplinaryDtl", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Employee_Code");

                    b.Property<string>("EmployeeDisId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Employee_Dis_Id");

                    b.Property<string>("Comments")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("Is_Deleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("IssueBy")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Issue_By");

                    b.Property<DateTime?>("IssueDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Issue_Date");

                    b.Property<string>("Memo")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Remarks")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("EmployeeId", "EmployeeCode", "EmployeeDisId")
                        .HasName("PK_Employee_Dis_Id");

                    b.ToTable("Employee_Disciplinary_DTL");
                });

            modelBuilder.Entity("EmployeeFinance.Models.EmployeeEducationDtl", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Employee_Code");

                    b.Property<string>("EmployeeEduId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Employee_Edu_Id");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("Is_Deleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("Percentage")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Qualfication")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Remarks")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("University")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("YearPassed")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("Year_Passed");

                    b.HasKey("EmployeeId", "EmployeeCode", "EmployeeEduId")
                        .HasName("PK_Employee_Edu_Id");

                    b.ToTable("Employee_Education_DTL");
                });

            modelBuilder.Entity("EmployeeFinance.Models.EmployeeExtraCurricularDtl", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Employee_Code");

                    b.Property<string>("EmployeeCurrId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Employee_Curr_Id");

                    b.Property<string>("ActivityName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Activity_Name");

                    b.Property<string>("Award")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EventName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Event_Name");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("datetime")
                        .HasColumnName("From_Date");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("Is_Deleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Remarks")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime")
                        .HasColumnName("To_Date");

                    b.HasKey("EmployeeId", "EmployeeCode", "EmployeeCurrId")
                        .HasName("PK_Employee_Curr_Id");

                    b.ToTable("Employee_EXTRA_CURRICULAR_DTL");
                });

            modelBuilder.Entity("EmployeeFinance.Models.EmployeeFamilyDetail", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Employee_Code");

                    b.Property<string>("EmployeeFamId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Employee_fam_Id");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("Created_By");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("Created_On");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Of_Birth");

                    b.Property<string>("Gender")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("Is_Deleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("Modified_By");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("Modified_On");

                    b.Property<string>("Relation")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RelativeName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Relative_Name");

                    b.Property<string>("Remarks")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("EmployeeId", "EmployeeCode", "EmployeeFamId")
                        .HasName("PK_Employee_fam_Id");

                    b.ToTable("Employee_Family_Details");
                });

            modelBuilder.Entity("EmployeeFinance.Models.EmployeeSalaryStructure", b =>
                {
                    b.Property<int>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmpSalStrId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Emp_Sal_Str_Id");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("Created_By");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("Created_On");

                    b.Property<DateTime?>("EffectiveFrom")
                        .HasColumnType("date")
                        .HasColumnName("Effective_From");

                    b.Property<string>("EmployeeId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Employee_Id");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("Is_Deleted");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("Modified_By");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("Modified_On");

                    b.Property<string>("PayheadId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Payhead_Id");

                    b.HasKey("RowId", "EmpSalStrId");

                    b.ToTable("Employee_Salary_Structure");
                });

            modelBuilder.Entity("EmployeeFinance.Models.EmployeeTrainingDtl", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Employee_Code");

                    b.Property<string>("EmployeeTraId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Employee_Tra_Id");

                    b.Property<string>("Comments")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("datetime")
                        .HasColumnName("From_Date");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("Is_Deleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Remarks")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime")
                        .HasColumnName("To_Date");

                    b.Property<string>("TrainingName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Training_Name");

                    b.HasKey("EmployeeId", "EmployeeCode", "EmployeeTraId")
                        .HasName("PK_Employee_Tra_Id");

                    b.ToTable("Employee_Training_DTL");
                });

            modelBuilder.Entity("EmployeeFinance.Models.EsigroupMst", b =>
                {
                    b.Property<int>("EsigroupId")
                        .HasColumnType("int")
                        .HasColumnName("ESIGroup_Id");

                    b.Property<string>("EsigroupCode")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ESIGroup_Code");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("Created_By");

                    b.Property<DateTime?>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Created_On")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("EsiLocalOffice")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ESI_Local_Office");

                    b.Property<string>("EsiNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ESI_No");

                    b.Property<string>("EsigroupName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ESIGroup_Name");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("Is_Deleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsIndividualCalc")
                        .HasColumnType("bit")
                        .HasColumnName("Is_Individual_Calc");

                    b.Property<bool?>("IsLimitEsiGross")
                        .HasColumnType("bit")
                        .HasColumnName("Is_Limit_ESI_Gross");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("Modified_By");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("Modified_On");

                    b.Property<int>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("EsigroupId", "EsigroupCode")
                        .HasName("PK_ESIgrp_Mst");

                    b.ToTable("ESIGroup_Mst");
                });

            modelBuilder.Entity("EmployeeFinance.Models.GradeMaster", b =>
                {
                    b.Property<int>("GradeId")
                        .HasColumnType("int")
                        .HasColumnName("Grade_Id");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("Created_By");

                    b.Property<DateTime?>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Created_On")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("GradeName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Grade_Name");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("Is_Deleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("Modified_By");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("Modified_On");

                    b.Property<int>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("GradeId");

                    b.ToTable("Grade_Master");
                });

            modelBuilder.Entity("EmployeeFinance.Models.HoliDayMaster", b =>
                {
                    b.Property<int>("HolidayId")
                        .HasColumnType("int")
                        .HasColumnName("Holiday_Id");

                    b.Property<string>("HolidayCode")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Holiday_Code");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("Created_By");

                    b.Property<DateTime?>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Created_On")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("IsBranchWise")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("Is_Branch_Wise");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("Is_Deleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("IsNationalHoliday")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("Is_National_Holiday");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("Modified_By");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("Modified_On");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("HolidayId", "HolidayCode");

                    b.ToTable("HoliDay_Master");
                });

            modelBuilder.Entity("EmployeeFinance.Models.LeaveMaster", b =>
                {
                    b.Property<int>("LeaveId")
                        .HasColumnType("int")
                        .HasColumnName("Leave_Id");

                    b.Property<string>("LeaveCode")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Leave_Code");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("Created_By");

                    b.Property<DateTime?>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Created_On")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsAffectSalary")
                        .HasColumnType("bit")
                        .HasColumnName("Is_Affect_salary");

                    b.Property<bool?>("IsAlloted")
                        .HasColumnType("bit")
                        .HasColumnName("Is_Alloted");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("Is_Deleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("LeaveName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Leave_Name");

                    b.Property<string>("LeaveShortName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Leave_Short_Name");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("Modified_By");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("Modified_On");

                    b.HasKey("LeaveId", "LeaveCode");

                    b.ToTable("Leave_Master");
                });

            modelBuilder.Entity("EmployeeFinance.Models.LumsumEditorMst", b =>
                {
                    b.Property<int>("LumsumEditorId")
                        .HasColumnType("int")
                        .HasColumnName("Lumsum_Editor_Id");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("Created_By");

                    b.Property<DateTime?>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Created_On")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("Is_Deleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("LumsumEditorAmount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Lumsum_Editor_Amount");

                    b.Property<int?>("LumsumEditorGrade")
                        .HasColumnType("int")
                        .HasColumnName("Lumsum_Editor_Grade");

                    b.Property<string>("LumsumEditorName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Lumsum_Editor_Name");

                    b.Property<string>("LumsumEditorType")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("Lumsum_Editor_Type");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("Modified_By");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("Modified_On");

                    b.Property<int>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("LumsumEditorId")
                        .HasName("PK_Lum_Mst");

                    b.ToTable("Lumsum_Editor_Mst");
                });

            modelBuilder.Entity("EmployeeFinance.Models.OccupationMaster", b =>
                {
                    b.Property<int>("OccupationId")
                        .HasColumnType("int")
                        .HasColumnName("Occupation_Id");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("Created_By");

                    b.Property<DateTime?>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Created_On")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("Is_Deleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("Modified_By");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("Modified_On");

                    b.Property<string>("OccupationCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Occupation_Code");

                    b.Property<string>("OccupationName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Occupation_Name");

                    b.Property<string>("OccupationShortName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Occupation_Short_Name");

                    b.HasKey("OccupationId")
                        .HasName("PK_occupation_Master");

                    b.ToTable("Occupation_Master");
                });

            modelBuilder.Entity("EmployeeFinance.Models.PayHeadMapMaster", b =>
                {
                    b.Property<int>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PayheadMapId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Payhead_Map_Id");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("Created_By");

                    b.Property<DateTime?>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Created_On")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal?>("CutoffAmount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Cutoff_Amount");

                    b.Property<DateTime?>("EffectiveFrom")
                        .HasColumnType("date")
                        .HasColumnName("Effective_From");

                    b.Property<string>("FormulaName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Formula_Name");

                    b.Property<string>("FormulaValue")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Formula_Value");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("Is_Deleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("Modified_By");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("Modified_On");

                    b.Property<string>("PayheadId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Payhead_Id");

                    b.Property<string>("PaymapCalcBasic")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("Paymap_Calc_Basic");

                    b.Property<decimal?>("PaymapCalcRate")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("Paymap_Calc_Rate");

                    b.Property<string>("PaymapCalcType")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("Paymap_Calc_Type");

                    b.Property<string>("RoundOff")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("Round_Off");

                    b.Property<int?>("SalaryStruId")
                        .HasColumnType("int")
                        .HasColumnName("Salary_Stru_Id");

                    b.HasKey("RowId", "PayheadMapId");

                    b.ToTable("PayHead_Map_Master");
                });

            modelBuilder.Entity("EmployeeFinance.Models.PayHeadMst", b =>
                {
                    b.Property<int>("PayHeadId")
                        .HasColumnType("int")
                        .HasColumnName("PayHead_Id");

                    b.Property<string>("PayHeadCode")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("PayHead_Code");

                    b.Property<string>("ContributeBy")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("Contribute_by");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("Created_By");

                    b.Property<DateTime?>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Created_On")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("Is_Deleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("Modified_By");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("Modified_On");

                    b.Property<string>("PayHeadCategory")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("PayHead_Category");

                    b.Property<string>("PayHeadInslip")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("PayHead_Inslip");

                    b.Property<string>("PayHeadName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PayHead_Name");

                    b.Property<string>("PayHeadType")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("PayHead_Type");

                    b.Property<string>("UseForGratuity")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("Use_For_Gratuity");

                    b.Property<string>("UseForNetPay")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("Use_For_NetPay");

                    b.HasKey("PayHeadId", "PayHeadCode")
                        .HasName("PK_payhead_Mst");

                    b.ToTable("PayHead_Mst");
                });

            modelBuilder.Entity("EmployeeFinance.Models.PayheadMapSlab", b =>
                {
                    b.Property<int>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PayheadMapSlabId")
                        .HasColumnType("int")
                        .HasColumnName("Payhead_Map_Slab_Id");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("Created_By");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("Created_On");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("Is_Deleted");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("Modified_By");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("Modified_On");

                    b.Property<int?>("PayheadId")
                        .HasColumnType("int")
                        .HasColumnName("Payhead_Id");

                    b.Property<int?>("PayheadMapId")
                        .HasColumnType("int")
                        .HasColumnName("Payhead_Map_Id");

                    b.Property<decimal?>("PaymapAmount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Paymap_Amount");

                    b.Property<string>("PaymapMaxAmount")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("Paymap_Max_Amount");

                    b.Property<decimal?>("PaymapMinAmount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Paymap_Min_Amount");

                    b.Property<string>("PaymapType")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("Paymap_Type");

                    b.Property<int?>("SalaryStrId")
                        .HasColumnType("int")
                        .HasColumnName("Salary_Str_Id");

                    b.HasKey("RowId", "PayheadMapSlabId");

                    b.ToTable("Payhead_Map_Slab");
                });

            modelBuilder.Entity("EmployeeFinance.Models.PfEsiRateSetting", b =>
                {
                    b.Property<int>("PfEsiRateId")
                        .HasColumnType("int")
                        .HasColumnName("PF_ESI_Rate_Id");

                    b.Property<string>("PfEsiRateCode")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("PF_ESI_Rate_Code");

                    b.Property<decimal>("Acc02")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Acc_02");

                    b.Property<decimal>("Acc21")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Acc_21");

                    b.Property<decimal>("Acc22")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Acc_22");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("Created_By");

                    b.Property<DateTime?>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Created_On")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("EffectiveFrom")
                        .HasColumnType("date")
                        .HasColumnName("Effective_From");

                    b.Property<decimal>("EmprPfRate")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("EMPR_PF_Rate");

                    b.Property<decimal>("EsiCutOff")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ESI_Cut_Off");

                    b.Property<decimal>("EsiEmplRate")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ESI_EMPL_Rate");

                    b.Property<decimal>("EsiEmprRate")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ESI_EMPR_Rate");

                    b.Property<decimal>("EsiMinWage")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ESI_Min_Wage");

                    b.Property<string>("EsiRoundOff")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("ESI_Round_Off");

                    b.Property<bool?>("IsAplySpecCutOff")
                        .HasColumnType("bit")
                        .HasColumnName("Is_Aply_Spec_CutOff");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("Is_Deleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("Modified_By");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("Modified_On");

                    b.Property<decimal>("PfCutOff")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PF_Cut_Off");

                    b.Property<decimal>("PfEmployerPension")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PF_Employer_Pension");

                    b.Property<bool?>("PfIsRestEmplToEmpr")
                        .HasColumnType("bit")
                        .HasColumnName("PF_Is_Rest_EMPL_TO_EMPR");

                    b.Property<bool?>("PfIsRestEmprShare")
                        .HasColumnType("bit")
                        .HasColumnName("PF_Is_Rest_EMPR_Share");

                    b.Property<decimal>("PfRate")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PF_Rate");

                    b.Property<string>("PfRoundOff")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("PF_Round_Off");

                    b.Property<decimal?>("PfSpecCutOff")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PF_Spec_Cut_Off");

                    b.HasKey("PfEsiRateId", "PfEsiRateCode");

                    b.ToTable("PF_ESI_Rate_Setting");
                });

            modelBuilder.Entity("EmployeeFinance.Models.PfgroupMst", b =>
                {
                    b.Property<int>("PfgroupId")
                        .HasColumnType("int")
                        .HasColumnName("PFGroup_Id");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("Created_By");

                    b.Property<DateTime?>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Created_On")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("DbaFileCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DBA_File_Code");

                    b.Property<string>("FileExtension")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("File_Extension");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("Is_Deleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("Modified_By");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("Modified_On");

                    b.Property<string>("PfNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PF_No");

                    b.Property<string>("PfgroupName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PFGroup_Name");

                    b.Property<int>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("PfgroupId")
                        .HasName("PK_PFgrp_Mst");

                    b.ToTable("PFGroup_Mst");
                });

            modelBuilder.Entity("EmployeeFinance.Models.PfsettingMst", b =>
                {
                    b.Property<int>("PfsettId")
                        .HasColumnType("int")
                        .HasColumnName("PFSett_Id");

                    b.Property<string>("PfsettCode")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("PFSett_Code");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("Created_By");

                    b.Property<DateTime?>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Created_On")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("EffectiveFrom")
                        .HasColumnType("date")
                        .HasColumnName("Effective_From");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("Is_Deleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("Modified_By");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("Modified_On");

                    b.Property<int?>("PfsettAge")
                        .HasColumnType("int")
                        .HasColumnName("PFSett_Age");

                    b.HasKey("PfsettId", "PfsettCode");

                    b.ToTable("PFSetting_Mst");
                });

            modelBuilder.Entity("EmployeeFinance.Models.PtgroupMst", b =>
                {
                    b.Property<int>("PtgroupId")
                        .HasColumnType("int")
                        .HasColumnName("PTGroup_Id");

                    b.Property<string>("CertificateNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Certificate_No");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("Created_By");

                    b.Property<DateTime?>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Created_On")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("Is_Deleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("Modified_By");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("Modified_On");

                    b.Property<string>("PtAddress")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("PT_Address");

                    b.Property<string>("PtgroupCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("PTGroup_Code");

                    b.Property<string>("PtgroupName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PTGroup_Name");

                    b.Property<string>("PtoNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PTO_No");

                    b.Property<string>("ReturnPeriod")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("Return_Period");

                    b.Property<int?>("StateId")
                        .HasColumnType("int")
                        .HasColumnName("State_Id");

                    b.HasKey("PtgroupId")
                        .HasName("PK_PTGRP_Mst");

                    b.ToTable("PTGroup_Mst");
                });

            modelBuilder.Entity("EmployeeFinance.Models.PtrateMst", b =>
                {
                    b.Property<int>("PtrateId")
                        .HasColumnType("int")
                        .HasColumnName("PTRate_Id");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("Created_By");

                    b.Property<DateTime?>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Created_On")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("EffectiveFrom")
                        .HasColumnType("date")
                        .HasColumnName("Effective_From");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("Is_Deleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("MaximumAmount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Maximum_Amount");

                    b.Property<decimal?>("MinimumAmount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Minimum_Amount");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("Modified_By");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("Modified_On");

                    b.Property<decimal?>("PtRate")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PT_Rate");

                    b.Property<int>("PtgroupId")
                        .HasColumnType("int")
                        .HasColumnName("PTGroup_Id");

                    b.Property<string>("PtrateName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PTRate_Name");

                    b.Property<int>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("PtrateId")
                        .HasName("PK_PTrate_Mst");

                    b.ToTable("PTRate_Mst");
                });

            modelBuilder.Entity("EmployeeFinance.Models.QualficationMaster", b =>
                {
                    b.Property<int>("QualificationId")
                        .HasColumnType("int")
                        .HasColumnName("Qualification_Id");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("Created_By");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("Created_On");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("Is_Deleted");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("Modified_By");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("Modified_On");

                    b.Property<string>("QualificationName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Qualification_Name");

                    b.Property<int>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("QualificationId")
                        .HasName("PK_quali_Master");

                    b.ToTable("Qualfication_Master");
                });

            modelBuilder.Entity("EmployeeFinance.Models.RetirementSettMst", b =>
                {
                    b.Property<int>("RetSettId")
                        .HasColumnType("int")
                        .HasColumnName("RetSett_Id");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("Created_By");

                    b.Property<DateTime?>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Created_On")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("EffectiveFrom")
                        .HasColumnType("date")
                        .HasColumnName("Effective_From");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("Is_Deleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("Modified_By");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("Modified_On");

                    b.Property<int?>("RetSettAge")
                        .HasColumnType("int")
                        .HasColumnName("RetSett_Age");

                    b.Property<int>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("RetSettId")
                        .HasName("PK_Retirement_Mst");

                    b.ToTable("RetirementSett_Mst");
                });

            modelBuilder.Entity("EmployeeFinance.Models.SalaryCalendarMaster", b =>
                {
                    b.Property<int>("SalaryCalendarId")
                        .HasColumnType("int")
                        .HasColumnName("Salary_Calendar_Id");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("Created_By");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("Created_On");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("Is_Deleted");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("Modified_By");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("Modified_On");

                    b.Property<string>("Name")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ShortName")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Short_Name");

                    b.HasKey("SalaryCalendarId");

                    b.ToTable("Salary_Calendar_Master");
                });

            modelBuilder.Entity("EmployeeFinance.Models.SalaryStructMst", b =>
                {
                    b.Property<int>("SalaryStrId")
                        .HasColumnType("int")
                        .HasColumnName("Salary_Str_Id");

                    b.Property<string>("SalaryStrCode")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Salary_Str_Code");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("Created_By");

                    b.Property<DateTime?>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Created_On")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("Is_Deleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsOnGross")
                        .HasColumnType("bit")
                        .HasColumnName("Is_On_Gross");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("Modified_By");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("Modified_On");

                    b.Property<string>("SalaryStrName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Salary_Str_Name");

                    b.Property<string>("SalaryStrReamrk")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Salary_Str_Reamrk");

                    b.HasKey("SalaryStrId", "SalaryStrCode");

                    b.ToTable("Salary_Struct_Mst");
                });

            modelBuilder.Entity("EmployeeFinance.Models.SiteMaster", b =>
                {
                    b.Property<int>("SiteId")
                        .HasColumnType("int")
                        .HasColumnName("Site_Id");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("Created_By");

                    b.Property<DateTime?>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Created_On")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("Is_Deleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("Modified_By");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("Modified_On");

                    b.Property<string>("SiteName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Site_Name");

                    b.HasKey("SiteId");

                    b.ToTable("Site_Master");
                });

            modelBuilder.Entity("EmployeeFinance.Models.StateMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CountryId")
                        .HasColumnType("int")
                        .HasColumnName("CountryID");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("StateMaster");
                });

            modelBuilder.Entity("EmployeeFinance.Models.TblCompany", b =>
                {
                    b.Property<int>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("Company_Id");

                    b.Property<bool?>("ComapnyIsBonus")
                        .HasColumnType("bit")
                        .HasColumnName("Comapny_IsBonus");

                    b.Property<bool?>("ComapnyIsEsi")
                        .HasColumnType("bit")
                        .HasColumnName("Comapny_IsESI");

                    b.Property<bool?>("ComapnyIsGratuity")
                        .HasColumnType("bit")
                        .HasColumnName("Comapny_IsGratuity");

                    b.Property<bool?>("ComapnyIsItr")
                        .HasColumnType("bit")
                        .HasColumnName("Comapny_IsITR");

                    b.Property<bool?>("ComapnyIsPf")
                        .HasColumnType("bit")
                        .HasColumnName("Comapny_IsPF");

                    b.Property<bool?>("ComapnyIsPfmultigrp")
                        .HasColumnType("bit")
                        .HasColumnName("Comapny_IsPFMultigrp");

                    b.Property<bool?>("ComapnyIsPfvol")
                        .HasColumnType("bit")
                        .HasColumnName("Comapny_IsPFVol");

                    b.Property<bool?>("ComapnyIsPt")
                        .HasColumnType("bit")
                        .HasColumnName("Comapny_IsPT");

                    b.Property<bool?>("ComapnyIsSupSalary")
                        .HasColumnType("bit")
                        .HasColumnName("Comapny_IsSupSalary");

                    b.Property<bool?>("ComapnyIsTds")
                        .HasColumnType("bit")
                        .HasColumnName("Comapny_IsTDS");

                    b.Property<string>("ComapnyTanNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Comapny_TanNo");

                    b.Property<string>("CompanyAddress")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Company_Address");

                    b.Property<string>("CompanyAddress2")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Company_Address2");

                    b.Property<string>("CompanyCinno")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Company_CINNo");

                    b.Property<string>("CompanyDbafileCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Company_DBAFile_Code");

                    b.Property<string>("CompanyEmail")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Company_Email");

                    b.Property<string>("CompanyEsiLocalOfc")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Company_ESI_LocalOfc");

                    b.Property<string>("CompanyEsiNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Company_ESI_No");

                    b.Property<string>("CompanyGstno")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Company_GSTNo");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Company_Name");

                    b.Property<string>("CompanyPersonName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Company_Person_Name");

                    b.Property<string>("CompanyPfExtn")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Company_PF_Extn");

                    b.Property<string>("CompanyPfno")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Company_PFNo");

                    b.Property<int?>("CompanyPhoneNo")
                        .HasColumnType("int")
                        .HasColumnName("Company_PhoneNo");

                    b.Property<string>("CompanyType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Company_Type");

                    b.Property<string>("CompanyWebsite")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Company_Website");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("Created_By");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("Created_On");

                    b.Property<bool?>("IndvCalculateEmpEsi")
                        .HasColumnType("bit")
                        .HasColumnName("Indv_Calculate_Emp_ESI");

                    b.Property<bool?>("IsEsiMultipleGroup")
                        .HasColumnType("bit")
                        .HasColumnName("Is_ESI_Multiple_Group");

                    b.Property<bool?>("LimitEsiGross")
                        .HasColumnType("bit")
                        .HasColumnName("Limit_ESI_Gross");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("Modified_By");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("Modified_On");

                    b.HasKey("RowId", "CompanyId")
                        .HasName("PK_Company_Id");

                    b.ToTable("Tbl_Company");
                });

            modelBuilder.Entity("EmployeeFinance.Models.TblCompanyBranch", b =>
                {
                    b.Property<string>("BranchAddress")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Branch_Address");

                    b.Property<string>("BranchAddress2")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Branch_Address2");

                    b.Property<string>("BranchEmail")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Branch_Email");

                    b.Property<int?>("BranchEsiGroup")
                        .HasColumnType("int")
                        .HasColumnName("Branch_ESI_Group");

                    b.Property<int>("BranchId")
                        .HasColumnType("int")
                        .HasColumnName("Branch_Id");

                    b.Property<string>("BranchName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Branch_Name");

                    b.Property<string>("BranchPersonName")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Branch_Person_Name");

                    b.Property<int?>("BranchPfGroup")
                        .HasColumnType("int")
                        .HasColumnName("Branch_PF_Group");

                    b.Property<int?>("BranchPhoneNo")
                        .HasColumnType("int")
                        .HasColumnName("Branch_PhoneNo");

                    b.Property<int?>("BranchPtGroup")
                        .HasColumnType("int")
                        .HasColumnName("Branch_PT_Group");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("Company_Id");

                    b.Property<int>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.ToTable("Tbl_Company_Branch");
                });

            modelBuilder.Entity("EmployeeFinance.Models.TblCompanyDocument", b =>
                {
                    b.Property<string>("CompanyFileName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Company_File_Name");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("Company_Id");

                    b.Property<byte[]>("FileData")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("File_Data");

                    b.Property<int>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.ToTable("Tbl_Company_Documents");
                });

            modelBuilder.Entity("EmployeeFinance.Models.WorkOrderMaster", b =>
                {
                    b.Property<int>("WorkOrderId")
                        .HasColumnType("int")
                        .HasColumnName("Work_Order_Id");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("Created_By");

                    b.Property<DateTime?>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Created_On")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("Is_Deleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("Modified_By");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("Modified_On");

                    b.Property<int>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("WorkOrderName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Work_Order_Name");

                    b.HasKey("WorkOrderId")
                        .HasName("PK_workorder_Master");

                    b.ToTable("WorkOrder_Master");
                });

            modelBuilder.Entity("EmployeeFinance.Models.CityMaster", b =>
                {
                    b.HasOne("EmployeeFinance.Models.StateMaster", "State")
                        .WithMany("CityMasters")
                        .HasForeignKey("StateId")
                        .HasConstraintName("FK_CityMaster_StateMaster");

                    b.Navigation("State");
                });

            modelBuilder.Entity("EmployeeFinance.Models.StateMaster", b =>
                {
                    b.HasOne("EmployeeFinance.Models.CountryMaster", "Country")
                        .WithMany("StateMasters")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_StateMaster_CountryMaster");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("EmployeeFinance.Models.CountryMaster", b =>
                {
                    b.Navigation("StateMasters");
                });

            modelBuilder.Entity("EmployeeFinance.Models.StateMaster", b =>
                {
                    b.Navigation("CityMasters");
                });
#pragma warning restore 612, 618
        }
    }
}
